import { prisma } from "../../../../generated/prisma-client";
import {generateToken} from "../../../utils";

export default{
    Mutation:{
        signIn:async(_,args,{request})=>{
            const { number, pwd, score=1, hardshipState = false }=args;   //argsï¿½ï¿½ï¿½ï¿½ ï¿½Ð¹ï¿½ï¿½ï¿½ ï¿½ï¿½Ð¹ï¿½È? ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½
            const isExistUser = await prisma.$exists.user({number});
            if(isExistUser==true){  //ï¿½Ì¹ï¿½ ï¿½ï¿½ï¿½ÔµÇ¾ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½
                const user = await prisma.user({number});   //prisma.userï¿½Ô¼ï¿½ï¿½ï¿½ ï¿½Ð¹ï¿½ï¿½ï¿½ ï¿½ï¿½ï¿½Ú·ï¿½ ï¿½Ô·ï¿½ï¿½Ø¼ï¿½ ï¿½ï¿½ï¿½ï¿½ï¿? ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½
                if(user.pwd===pwd){ //ï¿½ï¿½ï¿½ï¿½ user.pwdï¿½ï¿½ pwdï¿½ï¿½ ï¿½ï¿½ï¿½Ù¸ï¿½ jwt ï¿½ï¿½Å« ï¿½ï¿½ï¿½ï¿½
                    //JWT ï¿½ï¿½Å« ï¿½ï¿½ï¿½ï¿½
                    const token = generateToken(user.id);   //jwtï¿½ï¿½ idï¿½ï¿½ ï¿½ï¿½È£È­ï¿½Ø¼ï¿½ ï¿½ï¿½Å«ï¿½ï¿½ ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿?
                    return token;  
                } else{
                    throw Error("Wrong pwd")
                }    
            }else{  //ï¿½ï¿½ï¿½ÔµÇ¾ï¿½ ï¿½ï¿½ï¿½ï¿½ ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½
                const user = await prisma.createUser({
                    number,
                    pwd,
                    score,
                    hardshipState
                });
                const token = generateToken(user.id);
                return token;
            }
        }
    }
}