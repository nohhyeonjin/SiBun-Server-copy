input MenuInput{
  id : ID!
  quantity: Int!
}

type DetailIndividualOrder {
 id : ID! @id
 menu : Menu!
 quantity: Int! @default(value: 0)
 totalPrice : Int
 IndividualOrder: IndividualOrder @relation(name : "DetailIndividualOrderRelation")
}

type IndividualOrder {
 id : ID! @id
 user : User!
 menuList : [DetailIndividualOrder!]! @relation(name : "DetailIndividualOrderRelation")
 roomOrder : RoomOrder @relation(name : "RoomOrderIndividualOrderRelation")
}

type User {
  id : ID! @id
  number : Int! @unique
  score : Int! @default(value: 0)
  bossChatList : [ChatRoom!] @relation(name : "BossChatRelation")
  chatList : [ChatRoom!] @relation(name : "MemberChatRelation")
}


type MenuCategory {
  id : ID! @id
  name : String!
  store : Store! @relation(name : "StoreMenuCategoryRelation")
  menuList : [Menu] @relation(name : "MenuMenuCategoryRelation")
}


type StoreCategory {
  id : ID! @id
  name : String!
  storeList : [Store] @relation(name : "StoreStoreCategoryRelation")
}


type Store {
  id : ID! @id
  storeId : String!
  pwd : String!
  name : String! @unique
  storeCategory : StoreCategory! @relation(name : "StoreStoreCategoryRelation")
  menuCategoryList : [MenuCategory] @relation(name : "StoreMenuCategoryRelation")
  minimumPrice : Int!
  deliveryFee : Int!
  image : String
  chatRoomList : [ChatRoom] @relation(name : "StoreChatRoomRelation")
}

type Menu {
  id : ID! @id
  name : String!
  price : Int!
  menuCategory : MenuCategory! @relation(name : "MenuMenuCategoryRelation")
}


type ChatRoom {
  id : ID! @id
  boss : User!  @relation(name : "BossChatRelation")
  memberList : [User!] @relation(name : "MemberChatRelation")
  store : Store! @relation(name : "StoreChatRoomRelation")
  location : String!
  latitude : Float
  longitude : Float
  additionalLocation : String
  orderExpectedTime : DateTime!
  roomOrder : RoomOrder @relation(name : "ChatRoomOrderRelation")
  chatContentList : [ChatContent] @relation(name : "ChatRoomChatContentRelation")
  state : Boolean!
  vote: Vote @relation(name : "ChatRoomVoteRelation")
}


type RoomOrder {
  id : ID! @id
  chatRoom : ChatRoom! @unique @relation(name : "ChatRoomOrderRelation", link: INLINE)
  individualOrderList : [IndividualOrder!] @relation(name : "RoomOrderIndividualOrderRelation")
  phoneNumber : String
  state: Boolean!
}

type ChatContent {
  id : ID! @id
  user : User!
  chatRoom : ChatRoom! @relation(name : "ChatRoomChatContentRelation")
  content : String!
}

type Vote {
  id : ID! @id
  chatRoom : ChatRoom! @relation(name : "ChatRoomVoteRelation", link: INLINE)
  voteList : [UserVote!]! @relation(name : "VoteUserVoteRelation")
}

type UserVote {
  id : ID! @id
  user : User!
  choice : Boolean!
  vote : Vote! @relation(name : "VoteUserVoteRelation")
}